version: 2
orbs:
  aws-cli: circleci/aws-cli@1.3.2

jobs:
  testing-frontend:
    docker:
      - image: circleci/node:10-stretch
    steps:
      - checkout
      - restore_cache:
          keys:
          - app-{{ checksum "client/package.json" }}
          # fallback to using the latest cache if no exact match is found
          - app-
      - run: 
          name: Installing dependencies
          command: |
            cd client
            npm install
      - save_cache: # Save node_modules into cache with a checksum of the package.json
          paths:
            - node_modules
          key: app-{{ checksum "client/package.json" }}
      - run: 
          name: Run tests
          command: |
            cd client
            npm run test # Run your tests

  deploy-frontend:
    docker:
      - image: circleci/node:10-stretch
    steps:
      - checkout
      - run:
          name: Preparing Artifact
          command: |
            cd client
            npm install
            npm run build # Here goes your build command.
            cd build       # My angular app generate a Dist folder
            zip ../build.zip -r * .[^.]* # Just zip your files
            echo "Sucessfully building"
      - aws-cli/install
      - run:
          name: Deploying Client to S3 and Cloudfront
          command: |
            aws configure set preview.cloudfront true  # Turn on cloudfront in AWS CLI
            if [ "${CIRCLE_BRANCH}" == "master" ]  # Check current branch to decide to which S3 bucket deploy
            then
              aws s3 sync ~/repo/dist s3://pipe-production.com --delete
              aws cloudfront create-invalidation --distribution-id 	E32BHT2AHPCD0L --paths /\*
            elif [ "${CIRCLE_BRANCH}" == "staging" ]
            then
              # aws s3 sync ~/repo/dist s3://staging.yoursite.com --delete
              # aws cloudfront create-invalidation --distribution-id DISTRIBUTION_ID_YOUR_SITE_STAGING --paths /\*
              echo "Have not created staging environment"
            elif [ "${CIRCLE_BRANCH}" == "dev"]
              # aws s3 sync ~/repo/dist s3://dev.yoursite.com --delete
              # aws cloudfront create-invalidation --distribution-id DISTRIBUTION_ID_YOUR_SITE_DEV --paths /\*
              echo "Have not created dev environment"
            fi

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - testing-frontend
      - deploy-frontend:
          context: aws
          requires:
            - testing-frontend   # Deploy require testing to be successful
          filters:
            branches:
              only:     # Only deploy for production, staging, and master branches
                - production
                - staging
                - master